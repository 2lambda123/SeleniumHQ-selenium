module Selenium
  module WebDriver
    class Options
      @options: untyped

      W3C_OPTIONS: Array[Symbol]

      GRID_OPTIONS: Array[Symbol]

      BROWSER: Symbol

      KEY: untyped

      CAPABILITIES: Hash[Symbol, String]

      attr_reader self.driver_path: String

      def self.chrome: (**String | Symbol | Integer | bool opts) -> Chrome::Options

      def self.firefox: (**String | Symbol | Integer | bool  opts) -> Firefox::Options

      def self.ie: (**String | Symbol | Integer | bool  opts) -> IE::Options

      alias self.internet_explorer self.ie

      def self.edge: (**String | Symbol | Integer | bool  opts) -> Edge::Options

      alias self.microsoftedge self.edge

      def self.safari: (**String | Symbol | Integer | bool  opts) -> Safari::Options

      def self.set_capabilities: () -> untyped

      attr_accessor options: untyped

      def initialize: (**untyped opts) -> void

      def add_option: (String | Symbol name, bool | String | Integer? value) -> untyped

      def ==: (untyped other) -> bool

      alias eql? ==

      def as_json: (*untyped) -> untyped

      private

      def w3c?: (untyped key) -> untyped

      def process_w3c_options: (untyped options) -> untyped

      def process_browser_options: (untyped _browser_options) -> nil

      def camelize?: (untyped _key) -> true

      def generate_as_json: (untyped value, ?camelize_keys: bool) -> untyped

      def process_json_hash: (untyped value, untyped camelize_keys) -> untyped

      def convert_json_key: (untyped key, ?camelize: bool) -> untyped

      def camel_case: (untyped str) -> untyped
    end
  end
end
