module Selenium
  module WebDriver
    class Driver
      include SearchContext

      include TakesScreenshot

      def self.for: (Symbol browser, ?::Hash[Symbol, untyped] opts) -> Driver

      def initialize: (?bridge: untyped? bridge, ?listener: untyped? listener, **untyped opts) -> void

      def inspect: () -> untyped

      #
      # information about whether a remote end is in a state in which it can create new sessions,
      # and may include additional meta information.
      #
      # @return [Hash]
      #
      def status: () -> Hash[untyped, untyped]

      def navigate: () -> Navigation

      def switch_to: () -> TargetLocator

      def manage: () -> Manager

      def action: (**untyped opts) -> ActionBuilder

      def get: (untyped url) -> untyped

      def current_url: () -> untyped

      def title: () -> untyped

      def page_source: () -> untyped

      def quit: () -> untyped

      def close: () -> untyped

      def window_handles: () -> untyped

      def window_handle: () -> untyped

      def execute_script: (untyped script, *untyped args) -> untyped

      def execute_async_script: (untyped script, *untyped args) -> untyped

      def add_virtual_authenticator: (untyped options) -> untyped

      alias first find_element

      alias all find_elements

      alias script execute_script

      def []: (untyped sel) -> untyped

      def browser: () -> untyped

      def capabilities: () -> untyped

      def ref: () -> ::Array[:driver | nil]

      private

      attr_reader bridge: untyped

      def create_bridge: (caps: untyped caps, url: untyped url, ?http_client: untyped? http_client) -> untyped

      def service_url: (untyped service) -> untyped

      def screenshot: () -> untyped

      def add_extensions: (untyped browser) -> untyped
    end
  end
end
