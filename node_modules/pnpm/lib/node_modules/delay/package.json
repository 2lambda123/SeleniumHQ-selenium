{
  "_args": [
    [
      {
        "raw": "delay@4.0.1",
        "scope": null,
        "escapedName": "delay",
        "name": "delay",
        "rawSpec": "4.0.1",
        "spec": "4.0.1",
        "type": "version"
      },
      "/home/zkochan/src/pnpm/packages/pnpm"
    ]
  ],
  "_from": "delay@4.0.1",
  "_hasShrinkwrap": false,
  "_id": "delay@4.0.1",
  "_location": "/delay",
  "_nodeVersion": "8.11.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/delay_4.0.1_1536582375543_0.48729241966474013"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "delay@4.0.1",
    "scope": null,
    "escapedName": "delay",
    "name": "delay",
    "rawSpec": "4.0.1",
    "spec": "4.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/delay/-/delay-4.0.1.tgz",
  "_shasum": "052120e49bc3617a92e9a6cd9556be2cf23397a0",
  "_shrinkwrap": null,
  "_spec": "delay@4.0.1",
  "_where": "/home/zkochan/src/pnpm/packages/pnpm",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/delay/issues"
  },
  "dependencies": {},
  "description": "Delay a promise a specified amount of time",
  "devDependencies": {
    "abort-controller": "^1.0.2",
    "ava": "1.0.0-beta.8",
    "currently-unhandled": "^0.4.1",
    "in-range": "^1.0.0",
    "time-span": "^2.0.0",
    "tsd-check": "^0.2.1",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-wOsrzqdl8Lphi0v3g4FPz7zf0sT4o/u+z+LB+s1q0qzB9xw6QzZbdY9D6IoCojRHIxbaHvpUkLt6//1KB6VNug==",
    "shasum": "052120e49bc3617a92e9a6cd9556be2cf23397a0",
    "tarball": "https://registry.npmjs.org/delay/-/delay-4.0.1.tgz",
    "fileCount": 5,
    "unpackedSize": 7654,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJblmLoCRA9TVsSAnZWagAA00UP/2KQnKHnMeCXWav6Fl1P\nPKoKD+EYwX1R9mffak8Rbt0lLHH49aqWbGiRzKGDlIqzig3uOEF0TKxAu+aH\n2TJgPY7FqVelO2//lQlSPEt+pHXLYhm7UcNa4hnxVtmVSDG0ptNJrVt9FhD2\n8eUzT/SxKPXBuuicP41e5YS/in1s8ryCzfAUsctNrxcMiC3abyDl50sdhpig\nzjwSD0o5fdktlghcxFvdUGpMBCK4Xv8Wd5pN2UIqqoydBySE9kK6gQ7l9Ben\nf5FEf59wsPyxVqVly2r3oVJ4AGxP6yjRB7yHXyuVv9Ijvc7rOcRsIXtNNC56\nOUW4f6ncOMoprX8mLpY+FNHrwxD38Q5si5GBkgyoZ18AFgVUBVBDFadruFBm\ngBdq25+KaJRQiC1jvtIUQ6x4suZHCnt+i+N4RuzOFaZ58NveFmH2TNxqm5Sr\nTisUeYoX5ggsKIXmAEBnXE8rsrYQLxrBqvbPKAb3E+eyS8213/KwNkv8bfze\n4wsIBSBBiRCylzbsjBiil+nfEx3PwbKJun84Hk7coXC0vKv7Ye7enMcFB6s3\nqU2pVR7RzL6ACMeDn6aVXhep/Nxu7dRUciw3RkzjXnJu/pVrjo4vjFHfdxqn\ns13vyD16h4dMTYHM6oxWw5s1hidQmF4pbK/Kgrt7IeyXA3FOU+csMHtFjVdg\nIvxU\r\n=3rbU\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "0c4de4cf89ddc7f740ce32d220c0e87291aea894",
  "homepage": "https://github.com/sindresorhus/delay#readme",
  "keywords": [
    "promise",
    "resolve",
    "delay",
    "defer",
    "wait",
    "stall",
    "timeout",
    "settimeout",
    "event",
    "loop",
    "next",
    "tick",
    "delay",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jamestalmage",
      "email": "james@talmage.io"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "delay",
  "optionalDependencies": {},
  "readme": "# delay [![Build Status](https://travis-ci.org/sindresorhus/delay.svg?branch=master)](https://travis-ci.org/sindresorhus/delay)\n\n> Delay a promise a specified amount of time\n\n\n## Install\n\n```\n$ npm install delay\n```\n\n\n## Usage\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tbar();\n\n\tawait delay(100);\n\n\t// Executed 100 milliseconds later\n\tbaz();\n})();\n```\n\n\n## API\n\n### delay(milliseconds, [options])\n\nCreate a promise which resolves after the specified `milliseconds`.\n\n### delay.reject(milliseconds, [options])\n\nCreate a promise which rejects after the specified `milliseconds`.\n\n#### milliseconds\n\nType: `number`\n\nMilliseconds to delay the promise.\n\n#### options\n\nType: `Object`\n\n##### value\n\nType: `any`\n\nOptional value to resolve or reject in the returned promise.\n\n##### signal\n\nType: [`AbortSignal`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal)\n\nThe returned promise will be rejected with an AbortError if the signal is aborted. AbortSignal is available in all modern browsers and there is a [ponyfill for Node.js](https://github.com/mysticatea/abort-controller).\n\n### delayPromise.clear()\n\nClears the delay and settles the promise.\n\n\n## Advanced usage\n\nPassing a value:\n\n```js\nconst delay = require('delay');\n\n(async() => {\n\tconst result = await delay(100, {value: 'ðŸ¦„'});\n\n\t// Executed after 100 milliseconds\n\tconsole.log(result);\n\t//=> 'ðŸ¦„'\n})();\n```\n\nUsing `delay.reject()`, which optionally accepts a value and rejects it `ms` later:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\ttry {\n\t\tawait delay.reject(100, {value: new Error('ðŸ¦„')});\n\n\t\tconsole.log('This is never executed');\n\t} catch (error) {\n\t\t// 100 milliseconds later\n\t\tconsole.log(error);\n\t\t//=> [Error: ðŸ¦„]\n\t}\n})();\n```\n\nYou can settle the delay early by calling `.clear()`:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tconst delayedPromise = delay(1000, {value: 'Done'});\n\n\tsetTimeout(() => {\n\t\tdelayedPromise.clear();\n\t}, 500);\n\n\t// 500 milliseconds later\n\tconsole.log(await delayedPromise);\n\t//=> 'Done'\n})();\n```\n\nYou can abort the delay with an AbortSignal:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tconst abortController = new AbortController();\n\n\tsetTimeout(() => {\n\t\tabortController.abort();\n\t}, 500);\n\n\ttry {\n\t\tawait delay(1000, {signal: abortController.signal});\n\t} catch (error) {\n\t\t// 500 milliseconds later\n\t\tconsole.log(error.name)\n\t\t//=> 'AbortError'\n\t}\n})();\n```\n\n\n## Related\n\n- [delay-cli](https://github.com/sindresorhus/delay-cli) - CLI for this module\n- [p-cancelable](https://github.com/sindresorhus/p-cancelable) - Create a promise that can be canceled\n- [p-min-delay](https://github.com/sindresorhus/p-min-delay) - Delay a promise a minimum amount of time\n- [p-immediate](https://github.com/sindresorhus/p-immediate) - Returns a promise resolved in the next event loop - think `setImmediate()`\n- [p-timeout](https://github.com/sindresorhus/p-timeout) - Timeout a promise after a specified amount of time\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/delay.git"
  },
  "scripts": {
    "test": "xo && ava && tsd-check"
  },
  "version": "4.0.1"
}
